.wrapper.wrapper-content
  .row
    .col-md-8.col-md-offset-1.no-padding
      .ibox.float-e-margins
        .ibox-content
          .form-group
            = form.label "Title *", 'Title', class: 'control-label'
            = form.text_field :title, class: 'form-control simple-input', placeholder: 'Add your big bold offer title, should be 8-15 words in most cases.'
            br>
            - if @offer.persisted?
              - if @offer.published_status == false
                = link_to "Preview Post", [:website, :generic_post, :preview, :type => "offers", only_path: false, :host => website_host(@business.website), protocol: :http, :id => @offer.id], class: 'btn btn-block btn-default', :target => "_blank"
              - else
                - if @business.webhost_primary?
                  = link_to "View Post", [:website, @offer, only_path: false, host: website_host(@business.website), protocol: :http], class: 'btn btn-block btn-default', :target => "_blank"
                - elsif !@business.webhost_primary? && @business.has_plan?
                  = link_to "View Post", listing_path_content_url(@business, @offer.slug, 'offer'), class: 'btn btn-block btn-default', :target => "_blank"
          .text-right
            span.offer-row-kind> style="margin-right:5px" = form.object.kind.try(:titleize) || 'Image Left'
            span.btn-group.btn-group-sm
              span.btn.btn-default.offer-row-switch
                i.fa.fa-caret-left
              span.btn.btn-default.offer-row-switch
                i.fa.fa-caret-right
          .offer-row class=(form.object.kind || 'image_left')
            = form.hidden_field :kind
            .row
              .col-sm-6.offer-col-image
                = react_component 'ImagePlacement',
                  imagesPath: business_images_path(form.object.business),
                  inputPrefix: 'offer[offer_image_placement_attributes]',
                  label: '',
                  placement: form.object.offer_image_placement_json,
                  presignedPost: s3_presigned_post_hash,
                  bulkUploadPath: new_business_content_images_upload_path(form.object.business),
                  buttonSize: 'small',
                  buttonRemove: false,
                  showLocalOnlyOption: current_user.businesses.count > 1 || current_user.super_user?
              .col-sm-6
                .form-group
                  = form.label :offer, 'Offer Details *', class: 'control-label'
                  = react_component 'RichTextEditor',
                      name: 'offer[offer]',
                      html: @offer.offer,
                      rows: 8
                .form-group
                  = form.label :description, 'Include any additional benefits to the offer', class: 'control-label'
                  = react_component 'RichTextEditor',
                      name: 'offer[description]',
                      html: @offer.description,
                      rows: 8
          .row
            .col-sm-6
              .form-group
                = form.label :valid_until, 'Valid Until', class: 'control-label'
                .input-group
                  = form.text_field :valid_until, value: form.object.valid_until.try(:strftime, '%m/%d/%Y'), class: 'form-control', data: {provide: 'datepicker'}
                  span.input-group-addon: i.fa.fa-calendar
            .col-sm-6
              .form-group
                = form.label :offer_code, 'Offer Code', class: 'control-label'
                = form.text_field :offer_code, class: 'form-control simple-input', placeholder: 'Optional'
          hr>
          .row
            .col-sm-10.col-sm-offset-1
              .form-group
                = form.label :terms, 'Terms and Conditions – The Fine Print and Limitations *', class: 'control-label'
                = react_component 'RichTextEditor',
                    name: 'offer[terms]',
                    html: @offer.terms,
                    rows: 8
              br
              .form-group
                = form.label :coupon, 'Have a printable coupon you‘d like to use when redeeming?'
                = form.file_field :coupon
.webpage-save
  = hidden_field_tag 'draft', nil, :id => "draftField"
  .row
    - if (form.object.persisted? && form.object.published_status == false)
      .col-sm-4.col-sm-offset-2.col-xs-6
        = form.button 'Publish Post', class: 'btn btn-block btn-primary', type: "button", name: "publish"
      .col-sm-2.col-xs-1.text-center.no-padding
        a.text-center data-toggle="modal" data-target="#modal"
          span.fa.fa-cog.fa-2x
          span.hidden-xs.advanced-button Advanced
      .col-sm-4.col-xs-4
        .form-group.m-b-none
          = form.button 'Save Draft'.html_safe, class: 'btn-link secondary-btn', name: "draft", value: "draft", type: "button"
    - elsif form.object.persisted?
      .col-sm-4.col-sm-offset-2.col-xs-6
        = form.button 'Update Post', class: 'btn btn-block btn-primary', type: "button", name: "publish"
      .col-sm-2.col-xs-1.text-center.no-padding
        a.text-center data-toggle="modal" data-target="#modal"
          span.fa.fa-cog.fa-2x
          span.hidden-xs.advanced-button Advanced
      .col-sm-4.col-xs-4
        .form-group.m-b-none
          = form.button 'Unpublish & Revert to Draft'.html_safe, class: 'btn-link secondary-btn', name: "draft", value: "draft", type: "button"
    - else
      .col-sm-4.col-sm-offset-2.col-xs-6
        = form.button 'Publish Post and Share', class: 'btn btn-block btn-primary', type: "button", name: "publish"
      .col-sm-2.col-xs-1.text-center.no-padding
        a.text-center data-toggle="modal" data-target="#modal"
          span.fa.fa-cog.fa-2x
          span.hidden-xs.advanced-button Advanced
      .col-sm-4.col-xs-4
        .form-group.m-b-none
          = form.button 'Save Draft'.html_safe, class: 'btn-link secondary-btn', name: "draft", value: "draft", type: "button"
.modal.fade#modal tabindex="-1" aria-hidden="true" role="dialog"
  .modal-dialog.modal-lg
    .modal-content
      .modal-header
        button type="button" class="close" data-dismiss="modal" aria-label="Close"
          span aria-hidden="true" &times;
        h1 Advanced
      .modal-body
        .form-group
          = form.label :published_on, class: 'control-label'
          .input-group.date#datetimepicker
            = form.text_field :published_on, :value => (@offer.published_at.present? ? @offer.published_at.in_time_zone("Pacific Time (US & Canada)").strftime("%b %d %Y %H:%M:%S %p") : DateTime.now.in_time_zone("Pacific Time (US & Canada)").strftime("%b %d %Y %H:%M:%S %p")), :class => "form-control"
            span.input-group-addon
              span.glyphicon.glyphicon-calendar
        = render partial: 'businesses/content/advanced_settings', locals: {form: form, main_image: true}
        = render partial: 'businesses/content/classification', locals: {form: form}
javascript:
  $('.offer-row-switch').on('click', function(event) {
    if ($('.offer-row').hasClass('image_left')) {
      $('.offer-row').removeClass('image_left').addClass('image_right');
      $('.offer-row-kind').text('Image Right');
      $('.offer-row input[name*="kind"]').val('image_right');
    } else {
      $('.offer-row').removeClass('image_right').addClass('image_left');
      $('.offer-row-kind').text('Image Left');
      $('.offer-row input[name*="kind"]').val('image_left');
    }
  });


javascript:
  $(function () {
    $('#datetimepicker').datetimepicker({
        format: 'MMM D YYYY h:mm A ZZ'
    });
    $('button[name="draft"]').off('click');
    $('button[name="draft"]').click(function () {
      $('#draftField').val(1);
      $(this).prop('disabled', true).removeClass('btn-primary').addClass('btn-default').prepend('<i class="fa fa-spinner fa-spin" style="margin-right:0.5em">')
      $(".save-once").submit();
    });

    $('button[name="publish"]').off('click');
    $('button[name="publish"]').click(function () {
      $(this).prop('disabled', true).removeClass('btn-primary').addClass('btn-default').prepend('<i class="fa fa-spinner fa-spin" style="margin-right:0.5em">')
      $(".save-once").submit();
    });
  });
