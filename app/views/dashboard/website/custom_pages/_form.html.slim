.form-horizontal
  .form-group
    = form.label :title, class: 'col-sm-3 col-lg-2 control-label'
    .col-sm-6.col-lg-4
      = form.text_field :title, class: 'form-control js-title-input', data: { affects_pathname: form.object.pathname.blank?, affects_name: form.object.name.blank? }
      p.help-block Important for SEO
  .form-group
    = form.label :pathname, class: 'col-sm-3 col-lg-2 control-label'
    .col-sm-6.col-lg-4
      = form.text_field :pathname, autocomplete: 'off', class: 'form-control js-pathname-input'
    .col-sm-9.col-sm-offset-3.col-lg-10.col-lg-offset-2
      p.help-block
        = website_host(form.object.website)
        | /
        strong.text-info.js-pathname-label = form.object.pathname
  .form-group
    = form.label :name, class: 'col-sm-3 col-lg-2 control-label'
    .col-sm-6.col-lg-4
      = form.text_field :name, class: 'form-control js-name-input'
      p.help-block Used on headers and footers.
javascript:
  var setPathname = function(inputVal) {
    var pathnameVal = inputVal.toLowerCase().replace(/[^a-z0-9]+/g,'-').replace(/(^-|-$)/g,'');
    $('.js-pathname-input').val(pathnameVal);
    $('.js-pathname-label').text(pathnameVal);
  }
  var setName = function(inputVal) {
    $('.js-name-input').val(inputVal);
  }
  $(document).on('input', '.js-title-input', function(e) {
    if ($(this).data().affectsPathname == true) {
      setPathname(e.target.value);
    }
    if ($(this).data().affectsName == true) {
      setName(e.target.value);
    }
  });
  $(document).on('input', '.js-pathname-input', function(e) {
    setPathname(e.target.value);
  });
  $(document).on('keyup', '.js-pathname-input', function(e) {
    $('.js-title-input').data().affectsPathname = e.target.value.length == 0;
  });
  $(document).on('keyup', '.js-name-input', function(e) {
    $('.js-title-input').data().affectsName = e.target.value.length == 0;
  });
hr
.panel.panel-default.page-frame
  .panel-heading
    .form-inline
      .form-group style="margin: 0"
        = image_tag 'browser-buttons.png', alt: ''
  .theme-designer
    .theme-header
      = react_component 'ThemeHeaderDesigner',
        type: form.object.website.header,
        style: form.object.website.header_style,
        name: form.object.website.business.name,
        logoSmall: form.object.website.business.logo.try(:attachment_url, :small),
        logoMedium: form.object.website.business.logo.try(:attachment_url, :medium),
        logoLarge: form.object.website.business.logo.try(:attachment_url, :large),
        phoneNumber: form.object.website.business.location.phone_number,
        addressLineOne: form.object.website.business.location.address_line_one,
        addressLineTwo: form.object.website.business.location.address_line_two
    .theme-hero
      = form.fields_for :hero_background_placement, form.object.hero_background_placement || form.object.build_hero_background_placement do |placement_form|
        = placement_form.fields_for :image, placement_form.object.image || placement_form.object.build_image do |image_form|
          = placement_form.hidden_field :_destroy
          = image_form.hidden_field :id, class: 'image_id'
          = image_form.hidden_field :alt
          = image_form.hidden_field :title
          = image_form.hidden_field :attachment_cache_url
          = image_form.hidden_field :attachment_content_type
          = image_form.hidden_field :attachment_file_name
          = image_form.hidden_field :attachment_file_size
          - presigned_post = s3_presigned_post
          = react_component 'ThemeHeroDesigner',
            inputPrefix: 'custom_page',
            visible: form.object.hero?,
            type: form.object.hero_theme,
            title: form.object.hero_title,
            text: form.object.hero_text,
            background: form.object.hero_background.try(:attachment_url),
            button: form.object.hero_button,
            initialAlt: image_form.object.alt.to_s,
            initialFileName: image_form.object.attachment_file_name.to_s,
            initialFileSize: image_form.object.attachment_file_size.to_i,
            initialFileType: image_form.object.attachment_content_type.to_s,
            initialTitle: image_form.object.title.to_s,
            initialUrl: image_form.object.attachment_url.to_s,
            presignedPostFields: presigned_post.fields,
            presignedPostHost: presigned_post.url.host,
            presignedPostUrl: presigned_post.url.to_s
    .theme-tagline
      = react_component 'ThemeTaglineDesigner',
        inputPrefix: 'custom_page',
        visible: form.object.tagline?,
        type: form.object.tagline_theme,
        text: form.object.tagline_text,
        button: form.object.tagline_button
    .theme-footer
      = react_component 'ThemeFooterDesigner',
        type: form.object.website.footer,
        name: form.object.website.business.name,
        phoneNumber: form.object.website.business.location.phone_number,
        addressLineOne: form.object.website.business.location.address_line_one,
        addressLineTwo: form.object.website.business.location.address_line_two
  .panel-footer
